cmake_minimum_required(VERSION 2.6)
IF(CMAKE_TOOLCHAIN_FILE)
Include(${CMAKE_TOOLCHAIN_FILE})

ENDIF(CMAKE_TOOLCHAIN_FILE)


project(CODE_WAR)


ADD_DEFINITIONS(
-Wall
-g
-w)

FIND_PACKAGE(PkgConfig)
pkg_check_modules (GTK2 gtk+-2.0)
INCLUDE_DIRECTORIES(${GTK2_INCLUDE_DIRS})
LINK_LIBRARIES(${GTK2_LIBRARIES})

#find_package (GTK COMPONENTS gtk)
#include_directories (${GTK_INCLUDE_DIR}) 



IF(UNIX)
  link_libraries(m)
ENDIF(UNIX)

IF($ENV{DEBUG})
  set(CMAKE_BUILD_TYPE Debug)
  set(DEBUG 1)
  ADD_DEFINITIONS(-D_DEBUG)
ELSE($ENV{DEBUG})
  set(CMAKE_BUILD_TYPE Release)
ENDIF($ENV{DEBUG})

#find_package(Qt4 REQUIRED) # find and setup Qt4 for this project

# use network
SET(QT_USE_QGUI FALSE)
# use QT includes
#include(${QT_USE_FILE})

set(SRCS
  test2.c
  CodeWar.c
  affichage.c
  typage_operande.c
  arguments.c
  commandes.c
  interpreteur.c
  modifications.c
  flags.c
  debug.c
)

set(EXECUTABLE_OUTPUT_PATH "bin")

IF(GTK_FOUND)
 
ELSE(GTK_FOUND)
  message(blaaa) 
#  set(EXECUTABLE_NAME CodeWar)
  ADD_DEFINITIONS(-DQT_NO_DEBUG_OUTPUT)
  ADD_DEFINITIONS(-DCWASM_NO_DEBUG_OUTPUT)
ENDIF(GTK_FOUND)



include_directories (${GTK_INCLUDE_DIR}) 
add_executable (CodeWar ${SRCS})
target_link_libraries (CodeWar ${GTK2_LIBRARIES})



IF(DEBUG)
  set(EXECUTABLE_NAME CodeWar_d)
ELSE(DEBUG)
#  set(EXECUTABLE_NAME CodeWar)
#  ADD_DEFINITIONS(-DQT_NO_DEBUG_OUTPUT)
  ADD_DEFINITIONS(-DCWASM_NO_DEBUG_OUTPUT)
ENDIF(DEBUG)

add_executable(${EXECUTABLE_NAME} ${SRCS})


#target_link_libraries(${EXECUTABLE_NAME} ${QT_LIBRARIES})
